#此类配置可以在命令行模式中输入show-options -g查询
#set -g base-index 1                        #窗口的初始序号；默认为0，这里设置为1
set -g display-time 3000                   #提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set -g repeat-time 1000                    #控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒
set -g status-keys vi                      #操作状态栏时的默认键盘布局；可以设置为vi或emacs
set -g status-right "#(date +%H:%M' ')"    #状态栏右方的内容；这里的设置将得到类似23:59的显示
set -g status-right-length 10              #状态栏右方的内容长度；建议把更多的空间留给状态栏左方（用于列出当前窗口）

#set -g pane-border-fg green
#set -g pane-border-bg black
#set -g pane-active-border-fg white
#set -g pane-active-border-bg yellow

setw -g monitor-activity on
set -g visual-activity on

# status line
set -g status-utf8 on                      #开启状态栏的UTF-8支持
set -g status on
set -g status-interval 2
#set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right "#(date +%H:%M' ')"
setw -g window-status-fg white
setw -g window-status-bg cyan
setw -g window-status-attr dim
setw -g window-status-current-bg red
setw -g window-status-current-fg yellow
setw -g window-status-current-attr bright
#set -g status-justify "centre"
#set -g status-left-length 60
#set -g status-right-length 90
#set -g status-left "#(~/sources/tmux-powerline/powerline.sh left)"
#set -g status-right "#(~/sources/tmux-powerline/powerline.sh right)"
setw -g aggressive-resize on

#此类设置可以在命令行模式中输入show-window-options -g查询
set-window-option -g mode-keys vi    #复制模式中的默认键盘布局；可以设置为vi或emacs
set-window-option -g utf8 on         #开启窗口的UTF-8支持

#将激活控制台的快捷键由Ctrl+b修改为Ctrl+a
set -g prefix C-a
unbind C-b
bind a send-prefix

#添加自定义快捷键
bind z kill-session                     #按z结束当前会话；相当于进入命令行模式后输入kill-session
bind h select-layout even-horizontal    #按h将当前面板布局切换为even-horizontal；相当于进入命令行模式后输入select-layout even-horizontal
bind v select-layout even-vertical      #按v将当前面板布局切换为even-vertical；相当于进入命令行模式后输入select-layout even-vertical
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R
bind C-a last-window
bind C-c new-window
unbind l
#set -g default-terminal "screen-256color"

#new -n shell -t 1 bash
#neww -n TOP -t 9 top


# v to select
bind-key -t vi-copy 'v' begin-selection
# y to yank
bind-key -t vi-copy 'y' copy-selection

#open man page with m
bind m command-prompt "split-window -h 'exec man %%'"

# reload config without killing server
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded..."

# detach ^D d
unbind ^D
bind ^D detach

# kill K k
unbind K
bind K confirm-before "kill-window"

# split -v |
unbind |
bind | split-window -v
unbind V
bind V split-window

# mouse-select-pane [on | off]
# #   If on, tmux captures the mouse and when a window is
# #   split into multiple panes the mouse may be used to
# #   select the current pane.  The mouse click is also
# #   passed through to the application as normal.
# #
set -g mouse-select-pane on

#CPU MEM
#https://github.com/thewtex/tmux-mem-cpu-load
