{
/*
	// Place your snippets for Go here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"func main": {
		"prefix": "main",
		"body": [
			"func main() {",
			"\t$0",
			"}"
		],
		"description": "func main"
	},

	"package": {
		"prefix": "package",
		"body": [
			"package ${1:main}"
		],
		"description": "package"
	},

	"HTTP HandlerFunc": {
		"prefix": "httphandlerfunc",
		"body": [
			"func $1(w http.ResponseWriter, r *http.Request) {",
			"\t$0",
			"}"
		],
		"description": "HTTP HandlerFunc"
	},

	"errpanic": {
		"prefix": "errpanic",
		"body": [
			"if ${1:err} != nil {",
			"\tpanic($1)",
			"}",
			"$0"
		],
		"description": "panic(err)"
	},

	"errfatal": {
		"prefix": "errfatal",
		"body": [
			"if ${1:err} != nil {",
			"\tlog.Fatal($1)",
			"}",
			"$0"
		],
		"description": "log.Fatal(err)"
	},

	"errreturn": {
		"prefix": "errreturn",
		"body": [
			"if ${1:err} != nil {",
			"\treturn ${2:nil, }err",
			"}",
			"$0"
		],
		"description": "err return"
	},

	"iferrpanic": {
		"prefix": "iferrpanic",
		"body": [
			"if err := ${1}; err != nil {",
			"\tpanic(err)",
			"}",
			"$0"
		],
		"description": "if err panic"
	},

	"iferrreturn": {
		"prefix": "iferrreturn",
		"body": [
			"if err := ${1}; err != nil {",
			"\treturn ${2:nil, }err",
			"}",
			"$0"
		],
		"description": "if err return"
	},

	"checkErr": {
		"prefix": "fcheckerr",
		"body": [
			"func checkErr(err error) {",
			"\tif err != nil {",
			"\t\tpanic(err)",
			"\t}",
			"}",
			"$0"
		],
		"description": "checkErr"
	},

	"panicIf": {
		"prefix": "fpanicif",
		"body": [
			"func panicIf(err error) {",
			"\tif err != nil {",
			"\t\tpanic(err)",
			"\t}",
			"}",
			"$0"
		],
		"description": "panicIf"
	},

	"fatalf": {
		"prefix": "ffatalif",
		"body": [
			"func fatalIf(err error) {",
			"\tif err != nil {",
			"\t\tlog.Fatal(err)",
			"\t}",
			"}",
			"$0"
		],
		"description": "panicIf"
	},

	"struct": {
		"prefix": "struct",
		"body": [
			"type $1 struct {",
			"\t$0",
			"}"
		],
		"description": "select"
	},

	"select": {
		"prefix": "select",
		"body": [
			"select {",
			"case $1:",
			"\t$0",
			"}"
		],
		"description": "select"
	}
}